@startuml
interface Statistic {
}
interface Printable {
~ void print()
}
class CompositeStatistic {
- List<Statistic> statistics
+ void visit(StringBatchData)
+ void print()
}
class MostUsedWordStatistic {
- Map<String,Long> wordsMap
+ void visit(StringBatchData)
+ Optional<String> getMostUsedWord()
}
class ReaderFactory {
+ Optional<Reader> createResourceReader(Resource)
}
class StringOccurrenceStatistic {
- String sub
- long count
+ void visit(StringBatchData)
}
interface BatchVisitor {
~ void visit(StringBatchData)
}
class AnalyseFileJob {
- ReaderFactory readerFactory
- Path scanDirectory
+ void run()
}
class DirectoryScanner {
+ {static} String PROCESSED
- Path dir
- Path processedDir
+ void scan(Consumer<ScannerItem>)
~ void moveToProcessed(FileSystemResource)
}
class FileSystemScannerItem {
- FileSystemResource resource
- boolean processed
+ FileSystemResource getResource()
+ void markAsProcessed()
+ boolean isProcessed()
}
interface Reader {
~ void readInBatches(Consumer<BatchData>)
}
class TextReader {
- Resource resource
- Charset charset
+ void readInBatches(Consumer<BatchData>)
}
interface BatchData {
~ void accept(BatchVisitor)
}
class NumOfWordsStatistic {
- long count
+ void visit(StringBatchData)
}
class StringBatchData {
~ String line
+ void accept(BatchVisitor)
}
interface ScannerItem {
~ Resource getResource()
~ void markAsProcessed()
~ boolean isProcessed()
}

BatchVisitor <|-- Statistic
Printable <|-- Statistic
Statistic <|.. MostUsedWordStatistic
Statistic <|.. StringOccurrenceStatistic
Statistic <|.. NumOfWordsStatistic
Statistic <|.. CompositeStatistic
ScannerItem <|.. FileSystemScannerItem
Reader <|.. TextReader
BatchData <|.. StringBatchData
BatchData ..> BatchVisitor

AnalyseFileJob o-- ReaderFactory
AnalyseFileJob o-- DirectoryScanner
AnalyseFileJob o-- Statistic

Reader ..> BatchData

DirectoryScanner --> ScannerItem
AnalyseFileJob ..> Reader

@enduml